# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [ actions-workflow ]
  pull_request:
    branches: [ actions-workflow ]

jobs:
  test-docker:
    runs-on: ubuntu-latest
    container:
      ghcr.io/markkampstra/miniflix_backend:1.0
    credentials:
      username: ${{ github.actor }}
      password: ${{ secrets.GHCR_TOKEN }}
    steps:
    - uses: actions/checkout@v2
    - name: test-docker ls
      run: ls -l /github/workspace/
    - name: test-docker uname -a
      run: uname -a

  test:
    runs-on: ubuntu-latest
    env:
      working-directory: ./backend
    strategy:
      matrix:
        ruby-version: ['3.0']

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
          POSTGRES_DB: postgres
        ports:
        # will assign a random free host port
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Uname -a
      run: uname -a
    - name: Set up Ruby
    # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
    # change this to (see https://github.com/ruby/setup-ruby#versioning):
    # uses: ruby/setup-ruby@v1
      uses: ruby/setup-ruby@473e4d8fe5dd94ee328fdfca9f8c9c7afc9dae5e
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
        working-directory: ${{env.working-directory}}
    - name: Setup DB for tests
      env:
        DB_HOST: localhost
        DB_USERNAME: postgres
        DB_PASSWORD: password
        DB_PORT: ${{ job.services.postgres.ports[5432] }}
        RAILS_ENV: test
      run: bundle exec rails db:create
      working-directory: ${{env.working-directory}}
    - name: Run tests
      env:
        DB_HOST: localhost
        DB_USERNAME: postgres
        DB_PASSWORD: password
        DB_PORT: ${{ job.services.postgres.ports[5432] }}
      run: bundle exec rspec
      working-directory: ${{env.working-directory}}
